-- program -------------------------------------------------------------------

entrypoints Program ;

Prog.       Program ::= [TopDef] ;

StrDecl.    TopDef ::= Ident "=" "private" "constant" Type "c" String ;
FunDecl.    TopDef ::= "declare" Type Ident "(" [Type] ")" ;
FunDef.     TopDef ::= "define" Type Ident "(" [Arg] ")" "{" FirstBlock "\n" [CodeBlock] "}" ;

Arg.            Arg ::= Type Ident ;

-- values --------------------------------------------------------------------

ValVar.         Val ::= Ident ;
ValConst.       Val ::= Integer ;

-- types ----------------------------------------------------------------------

TBool.          Type ::= "i1" ;
TSm.            Type ::= "i8" ;
TInt.           Type ::= "i32" ;
TVoid.          Type ::= "void" ;
TArr.           Type ::= "[" Integer "x" Type "]" ;
TPtr.           Type ::= Type "*" ;

-- instructions ---------------------------------------------------------------

FirstBlock.     FirstBlock ::= [DeclInstr] "\n" [Instr] "\n" JmpInstr ;

CodeBlock.      CodeBlock ::= Ident ":" "\n" [Instr] "\n" JmpInstr ;

StmBr.          JmpInstr ::= "br" "label" Ident ;
StmCBr.         JmpInstr ::= "br" Type Val "," "label" Ident "," "label" Ident ;
StmVoidRet.     JmpInstr ::= "ret" "void" ;
StmRet.         JmpInstr ::= "ret" Type Val ;

Alloca.         DeclInstr ::= Ident "=" "alloca" Type ;

StmOpBin.       Instr ::= Ident "=" Op Type Val "," Val ;
ICmp.           Instr ::= Ident "=" "icmp" Cond Type Val "," Val ;
Call.           Instr ::= Ident "=" "call" Type Ident "(" [Item] ")" ;
VoidCall.       Instr ::= "call" "void" Ident "(" [Item] ")" ; 
Load.           Instr ::= Ident "=" "load" Type "," Type Ident ;
Store.          Instr ::= "store" Type Val "," Type Ident ;
Bitcast.        Instr ::= Ident "=" "bitcast" Type Val "to" Type ;

Item.           Item ::= Type Val ;

-- operations -----------------------------------------------------------------

Add.            Op ::= "add" ;
Sub.            Op ::= "sub" ;
Mul.            Op ::= "mul" ;
SDiv.           Op ::= "sdiv" ;
SRem.           Op ::= "srem" ;
And.            Op ::= "and" ;
Or.             Op ::= "or" ;

Eq.             Cond ::= "eq" ;
Ne.             Cond ::= "ne" ;
Sgt.            Cond ::= "sgt" ;
Sge.            Cond ::= "sge" ;
Slt.            Cond ::= "slt" ;
Sle.            Cond ::= "sle" ;

separator nonempty TopDef "" ;
separator CodeBlock "\n" ;
separator DeclInstr "\n" ;
separator Instr "\n" ;
separator Type "," ;
separator Arg "," ;
separator Item "," ;

comment ";" ;